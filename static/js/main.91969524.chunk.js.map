{"version":3,"sources":["js/helpers/Globals.js","js/functions/PlayIcon.js","js/functions/ShuffleArray.js","audio/patterns-no-5.ogg","audio/patterns-no-5.mid","js/P5SketchWithAudio.js","js/App.js","index.js"],"names":["window","p5","PlayIcon","id","className","xmlns","height","viewBox","width","d","fill","ShuffleArray","array","temporaryValue","randomIndex","currentIndex","length","Math","floor","random","P5SketchWithAudio","sketchRef","useRef","Sketch","p","canvas","canvasWidth","innerWidth","canvasHeight","innerHeight","audioLoaded","player","PPQ","loadMidi","Midi","fromUrl","midi","then","result","console","log","noteSet1","tracks","notes","scheduleCueSet","document","getElementById","classList","add","remove","style","backgroundColour","preload","song","loadSound","audio","onended","logCredits","noteSet","callbackName","poly","lastTicks","currentCue","i","note","ticks","time","addCue","setup","createCanvas","colorMode","HSB","background","noFill","stroke","strokeWeight","noLoop","draw","isPlaying","executeCueSet1","duration","gridDivisors","durationTicks","complex","createGrid","delayAmount","parseInt","gridCells","cell","setTimeout","drawCell","x","y","size","quarterCell","line","beginShape","vertex","bezierVertex","endShape","gridDivisor","push","mousePressed","pause","currentTime","buffer","reset","addClass","play","creditsLogged","stop","updateCanvasDimensions","resizeCanvas","attachEvent","addEventListener","useEffect","current","ref","App","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.91969524.chunk.js","sourcesContent":["// p5.sound doesn't work correctly when p5 is not available in the global name space so we add it here\n// https://github.com/processing/p5.js-sound/issues/512\nimport * as p5 from \"p5\";\nwindow.p5 = p5;\n","export default function PlayIcon() {\n    return (\n        <svg id=\"play-icon\" className='fade-out' xmlns=\"http://www.w3.org/2000/svg\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\">\n            <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n            <path d=\"M10 16.5l6-4.5-6-4.5v9zM12 2C6.48 2 2 6.48 2 12s4.48 10 10 10 10-4.48 10-10S17.52 2 12 2zm0 18c-4.41 0-8-3.59-8-8s3.59-8 8-8 8 3.59 8 8-3.59 8-8 8z\" />\n        </svg>\n    )\n}\n","function ShuffleArray(array) {\n  var currentIndex = array.length,\n    temporaryValue,\n    randomIndex;\n\n  // While there remain elements to shuffle...\n  while (currentIndex !== 0) {\n    // Pick a remaining element...\n    randomIndex = Math.floor(Math.random() * currentIndex);\n    currentIndex -= 1;\n\n    // And swap it with the current element.\n    temporaryValue = array[currentIndex];\n    array[currentIndex] = array[randomIndex];\n    array[randomIndex] = temporaryValue;\n  }\n\n  return array;\n}\n\nexport default ShuffleArray;\n","export default __webpack_public_path__ + \"static/media/patterns-no-5.1ec39cec.ogg\";","export default __webpack_public_path__ + \"static/media/patterns-no-5.d23a1280.mid\";","import React, { useRef, useEffect } from \"react\";\nimport \"./helpers/Globals\";\nimport \"p5/lib/addons/p5.sound\";\nimport * as p5 from \"p5\";\nimport { Midi } from '@tonejs/midi'\nimport PlayIcon from './functions/PlayIcon.js';\nimport ShuffleArray from './functions/ShuffleArray.js';\n\nimport audio from \"../audio/patterns-no-5.ogg\";\nimport midi from \"../audio/patterns-no-5.mid\";\n\nconst P5SketchWithAudio = () => {\n    const sketchRef = useRef();\n\n    const Sketch = p => {\n\n        p.canvas = null;\n\n        p.canvasWidth = window.innerWidth;\n\n        p.canvasHeight = window.innerHeight;\n\n        p.audioLoaded = false;\n\n        p.player = null;\n\n        p.PPQ = 3840 * 4;\n\n        p.loadMidi = () => {\n            Midi.fromUrl(midi).then(\n                function(result) {\n                    console.log(result);\n                    const noteSet1 = result.tracks[5].notes; // Thor 3 - Mound of Wires\n                    p.scheduleCueSet(noteSet1, 'executeCueSet1');\n                    p.audioLoaded = true;\n                    document.getElementById(\"loader\").classList.add(\"loading--complete\");\n                    document.getElementById(\"play-icon\").classList.remove(\"fade-out\");\n                    document.getElementById(\"play-icon\").style.fill = p.backgroundColour ? '#000' : '#FFF';\n                }\n            );\n            \n        }\n\n        p.preload = () => {\n            p.song = p.loadSound(audio, p.loadMidi);\n            p.song.onended(p.logCredits);\n        }\n\n        p.scheduleCueSet = (noteSet, callbackName, poly = false)  => {\n            let lastTicks = -1,\n                currentCue = 1;\n            for (let i = 0; i < noteSet.length; i++) {\n                const note = noteSet[i],\n                    { ticks, time } = note;\n                if(ticks !== lastTicks || poly){\n                    note.currentCue = currentCue;\n                    p.song.addCue(time, p[callbackName], note);\n                    lastTicks = ticks;\n                    currentCue++;\n                }\n            }\n        } \n\n        p.setup = () => {\n            p.backgroundColour = Math.random() > 0.5 ? 255 : 0;\n            p.canvas = p.createCanvas(p.canvasWidth, p.canvasHeight);\n            p.colorMode(p.HSB);\n            p.background(p.backgroundColour);\n            p.noFill();\n            p.stroke(255);\n            p.strokeWeight(2);\n            p.noLoop();\n        }\n\n        p.draw = () => {\n            if(p.audioLoaded && p.song.isPlaying()){\n\n            }\n        }\n\n        p.executeCueSet1 = (note) => {\n            const { duration, durationTicks } = note, \n                gridDivisors = durationTicks > 20000 ? [24, 48, 72] : [6, 9, 12], \n                complex = Math.random() > 0.5,\n                stroke = Math.random() > 0.7 ? 'random' : p.random(0, 360);\n            p.createGrid(gridDivisors);\n            p.background(p.backgroundColour);\n            const delayAmount = parseInt(duration * 1000) / p.gridCells.length;\n            for (let i = 0; i < p.gridCells.length; i++) {\n                const cell = p.gridCells[i];\n                setTimeout(\n                    function () {\n                        p.drawCell(cell, complex, stroke);\n                    },\n                    ((delayAmount / 8 * 6) * i)\n                );\n            }\n        }\n\n        p.drawCell = (cell, complex, stroke) => {\n            const {x, y, size} = cell, \n                quarterCell = size / 4;\n            p.stroke(stroke, 100, 100);\n            if(stroke === 'random') {\n                p.stroke(p.random(0, 360), 100, 100);\n            }\n            if(Math.random() > 0.5){\n                p.line(x, y, x + size, y + size);\n                if(complex) {\n                    p.beginShape();\n                    p.vertex(x, y);\n                    p.bezierVertex(\n                        x + quarterCell * 3, \n                        y + quarterCell * 1, \n                        x + quarterCell * 1, \n                        y + quarterCell * 3, \n                        x + size, \n                        y + size\n                    );\n                    p.endShape();\n                    p.beginShape();\n                    p.vertex(x, y);\n                    p.bezierVertex(\n                        x + quarterCell * 1, \n                        y + quarterCell * 3, \n                        x + quarterCell * 3, \n                        y + quarterCell * 1,\n                        x + size, \n                        y + size\n                    );\n                    p.endShape();\n                }\n            }\n            else {\n                p.line(x + size, y, x, y + size);\n                if(complex) {\n                    p.beginShape();\n                    p.vertex(x + size, y);\n                    p.bezierVertex(\n                        x + quarterCell * 1, \n                        y + quarterCell * 1, \n                        x + quarterCell * 3, \n                        y + quarterCell * 3, \n                        x, \n                        y + size\n                    );\n                    p.endShape();\n                    p.beginShape();\n                    p.vertex(x + size, y);\n                    p.bezierVertex(\n                        x + quarterCell * 3, \n                        y + quarterCell * 3, \n                        x + quarterCell * 1, \n                        y + quarterCell * 1,\n                        x, \n                        y + size\n                    );\n                    p.endShape();\n                    }\n            }\n        }\n\n        p.gridDivisor = 16;\n\n        p.gridCells = [];\n\n        p.createGrid = (gridDivisors = [8, 16, 32, 64, 96]) => {\n            p.gridCells = [];\n            p.gridDivisor = p.random(gridDivisors);\n            const size = p.width / p.gridDivisor;\n            for (let x = 0; x < p.width; x = x + size) {\n                for (let y = 0; y < p.height; y = y + size) {\n                    p.gridCells.push(\n                        {\n                            x: x,\n                            y: y,\n                            size: size,\n                        }\n                    );\n                } \n            } \n\n            p.gridCells = ShuffleArray(p.gridCells);\n        }\n\n        p.mousePressed = () => {\n            if(p.audioLoaded){\n                if (p.song.isPlaying()) {\n                    p.song.pause();\n                } else {\n                    if (parseInt(p.song.currentTime()) >= parseInt(p.song.buffer.duration)) {\n                        p.reset();\n                    }\n                    document.getElementById(\"play-icon\").classList.add(\"fade-out\");\n                    p.canvas.addClass(\"fade-in\");\n                    p.song.play();\n                }\n            }\n        }\n\n        p.creditsLogged = false;\n\n        p.logCredits = () => {\n            if (\n                !p.creditsLogged &&\n                parseInt(p.song.currentTime()) >= parseInt(p.song.buffer.duration)\n            ) {\n                p.creditsLogged = true;\n                    console.log(\n                    \"Music By: http://labcat.nz/\",\n                    \"\\n\",\n                    \"Animation By: https://github.com/LABCAT/\"\n                );\n                p.song.stop();\n            }\n        };\n\n        p.reset = () => {\n\n        }\n\n        p.updateCanvasDimensions = () => {\n            p.canvasWidth = window.innerWidth;\n            p.canvasHeight = window.innerHeight;\n            p.canvas = p.resizeCanvas(p.canvasWidth, p.canvasHeight);\n        }\n\n        if (window.attachEvent) {\n            window.attachEvent(\n                'onresize',\n                function () {\n                    p.updateCanvasDimensions();\n                }\n            );\n        }\n        else if (window.addEventListener) {\n            window.addEventListener(\n                'resize',\n                function () {\n                    p.updateCanvasDimensions();\n                },\n                true\n            );\n        }\n        else {\n            //The browser does not support Javascript event binding\n        }\n    };\n\n    useEffect(() => {\n        new p5(Sketch, sketchRef.current);\n    }, []);\n\n    return (\n        <div ref={sketchRef}>\n            <PlayIcon />\n        </div>\n    );\n};\n\nexport default P5SketchWithAudio;\n","import P5SketchWithAudio from './P5SketchWithAudio'\n\nfunction App() {\n  return (\n    <P5SketchWithAudio/>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './css/build.css';\nimport App from './js/App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}